{"version":3,"file":"rave-payment-provider.js","sourceRoot":"","sources":["../../src/providers/rave-payment-provider.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Misc } from './misc-provider';\r\n\r\n@Injectable()\r\n\r\nexport class RavePayment {\r\n    // amount = \"\";\r\n    // currency = \"\";\r\n    // customer_email = \"\";\r\n    // txref = \"\"\r\n    // redirect_url = \"\"\r\n    // meta = \"\"\r\n    // custom_description = \"\"\r\n    // customer_phone = \"\"\r\n    // PBFPubkey = \"\"\r\n    // integrity_hash = \"\"\r\n    // payment_options = \"\"\r\n    // payment_plan = \"\"\r\n    // subaccounts = []\r\n    // country = \"\"\r\n    // customer_firstname = \"\"\r\n    // customer_lastname = \"\"\r\n    // custom_title = \"\";\r\n    schema: object = {\r\n        txref: {\r\n          required: \"true\",\r\n          type: \"string\",\r\n          isEmpty: function (data) {\r\n            return data === \"\" || data == null || data == undefined\r\n          }\r\n        },\r\n        customer_phone: {\r\n          required: \"true\",\r\n          type: \"string\",\r\n          isEmpty: function (data) {\r\n            return data === \"\" || data == null || data == undefined\r\n          }\r\n        },\r\n        customer_email: {\r\n          required: \"true\",\r\n          type: \"string\",\r\n          isEmpty: function (data) {\r\n            return data === \"\" || data == null || data == undefined\r\n          },\r\n          isValidEmail: function (email) {\r\n            return email.match(/^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/)\r\n          }\r\n        },\r\n        amount: {\r\n          required: \"true\",\r\n          type: \"number\",\r\n          isEmpty: function (data) {\r\n            return data === \"\" || data == null || data == undefined\r\n          }\r\n        },\r\n        integrity_hash: {\r\n          required: false,\r\n          type: \"string\",\r\n        },\r\n        payment_options: {\r\n          required: false,\r\n          type: \"string\",\r\n        },\r\n        payment_plan: {\r\n          required: false,\r\n          type: \"number\",\r\n        },\r\n        subaccounts: {\r\n          required: false,\r\n          isValidArray: function (array) {\r\n            return Array.isArray(array)\r\n          }\r\n        },\r\n        currency: {\r\n          required: false,\r\n          type: \"string\"\r\n        },\r\n        country: {\r\n          required: false,\r\n          type: \"string\",\r\n        },\r\n        customer_firstname: {\r\n          required: false,\r\n          type: \"string\",\r\n        },\r\n        customer_lastname: {\r\n          required: false,\r\n          type: \"string\",\r\n        },\r\n        custom_title: {\r\n          required: false,\r\n          type: \"string\",\r\n        },\r\n        custom_description: {\r\n          required: false,\r\n          type: \"string\",\r\n        },\r\n        redirect_url: {\r\n          required: false,\r\n          type: \"string\",\r\n          isValidUri: function (email) {\r\n            return email.match(/\\w+:(\\/?\\/?)[^\\s]+/g)\r\n          }\r\n        }\r\n  }\r\n\r\n    constructor(private misc: Misc) {\r\n    }\r\n\r\n    create(payload) {\r\n        const result = this.validate(payload)\r\n        if(result[\"valid\"] == false) return result[\"error\"]\r\n        else {\r\n            // for (const key in result[\"payload\"]) {\r\n            //     if (result[\"payload\"].hasOwnProperty(key)) {\r\n            //         this[key] = result[\"payload\"][key];\r\n            //     }\r\n            // }\r\n            this.misc.paymentObject = result[\"payload\"]\r\n            return result[\"payload\"];\r\n        }\r\n    }\r\n\r\n    amount() : number {\r\n        return this.misc.paymentObject[\"amount\"]\r\n    }\r\n    \r\n    currency() : string{\r\n        return this.misc.paymentObject[\"currency\"]\r\n    }\r\n    \r\n    email() : string {\r\n        return this.misc.paymentObject[\"customer_email\"]\r\n    }\r\n\r\n    txref() : string{\r\n        return this.misc.paymentObject[\"txref\"]\r\n    }\r\n\r\n\r\n    validate(object) {\r\n        var error = []\r\n        var schema = this.schema;\r\n        if(object != null && typeof(object) == \"object\" && Array.isArray(object) == false){ // checks if payload object passed in is really an object\r\n    \r\n            for(let prop in schema) {\r\n    \r\n                if(Object.keys(object).indexOf(prop)  == -1 && schema[prop].required == false) continue;\r\n        \r\n                if(schema[prop].required == true) {\r\n                    if(schema[prop].isEmpty(object[prop])) error.push({'property': prop, 'error': `${prop} is a required field and cannot be empty`});\r\n                }\r\n            \r\n                if(prop == \"customer_email\") {\r\n                    let is_valid = schema[prop].isValidEmail(object[prop]);\r\n                    if(!is_valid) error.push({'property': prop, 'error': `${prop} must be a valid email address`});\r\n                }\r\n              \r\n                if(prop == \"subaccounts\") {\r\n                    let is_valid = schema[prop].isValidArray(object[prop]);\r\n                    if(!is_valid) error.push({'property': prop, 'error': `${prop} must be an array of objects`});\r\n                }\r\n              \r\n                if(prop == \"redirect_url\") {\r\n                    let is_valid = schema[prop].isValidUri(object[prop]);\r\n                    if(!is_valid) error.push({'property': prop, 'error': `${prop} must be a valid url`});\r\n                }\r\n                \r\n        \r\n                if(!(schema[prop].type == typeof(object[prop]))) { // checks that every parameter in the object is of its correct type\r\n                    if(prop == \"subaccounts\") continue\r\n                    error.push({'property': prop, 'error': `${prop} must be of type ${schema[prop].type}`});\r\n                }\r\n            }\r\n        }else error.push({property: object, error: \"You must pass in an object\"})\r\n        \r\n        if(error.length == 0) { \r\n            object.validated = true;\r\n            return {valid: true, payload: object};\r\n        }\r\n        else return {valid: false, error: error};\r\n    }    \r\n}\r\n"]}