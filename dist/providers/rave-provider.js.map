{"version":3,"file":"rave-provider.js","sourceRoot":"","sources":["../../src/providers/rave-provider.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,IAAI,EAAE,MAAM,iBAAiB,CAAC;AACvC,OAAO,EAAE,WAAW,EAAE,MAAM,yBAAyB,CAAC;AAEtD,OAAO,EAAE,UAAU,EAAE,MAAM,sBAAsB,CAAC;;IAK9C,cAAmB,IAAU,EAAS,WAAwB,EAAU,IAAgB;QAArE,SAAI,GAAJ,IAAI,CAAM;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAU,SAAI,GAAJ,IAAI,CAAY;KACvF;IAED;;;;OAIG;;;;;;IACH,mBAAI;;;;;IAAJ,UAAK,UAAgB,EAAE,UAAU;QAAjC,iBAQC;QARI,2BAAA,EAAA,kBAAgB;QACjB,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,EAAE,CAAA,CAAC,UAAU,IAAI,SAAS,CAAC;gBAAC,MAAM,CAAC,mCAAmC,CAAC,CAAC;YACxE,EAAE,CAAC,CAAC,UAAU,CAAC;gBAAC,KAAI,CAAC,GAAG,GAAG,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC;YAC1C,IAAI;gBAAC,KAAI,CAAC,GAAG,GAAG,KAAI,CAAC,IAAI,CAAC,OAAO,CAAC;YAClC,KAAI,CAAC,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC;YACjC,OAAO,CAAC,IAAI,CAAC,CAAA;SAChB,CAAC,CAAA;KACL;IAED;;;OAGG;;;;;IACH,wBAAS;;;;IAAT,UAAU,aAAyB;QAAnC,iBAYC;QAXG,aAAa,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;QACjD,IAAI,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,aAAa,CAAC,CAAA;QACvD,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,EAAE,CAAA,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gBACzB,MAAM,CAAC,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAI,CAAC,GAAG,EAAE,UAAU,EAAE,EAAC,OAAO,EAAE,EAAC,cAAc,EAAE,kBAAkB,EAAC,EAAC,CAAC;qBACvF,SAAS,CAAC,UAAA,QAAQ;oBACf,EAAE,CAAA,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAC;wBAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAA;oBAC7D,IAAI;wBAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAA;iBACzC,CAAC,CAAA;aACT;YAAA,IAAI;gBAAC,MAAM,CAAC,UAAU,CAAC,CAAA;SAC3B,CAAC,CAAA;KACL;IAED;;;OAGG;;;;;IACH,qBAAM;;;;IAAN,UAAO,WAAW;;QAEd,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;KACtC;;gBA9CJ,UAAU;;;;gBALF,IAAI;gBACJ,WAAW;gBAEX,UAAU;;eAJnB;;SAOa,IAAI","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Misc } from './misc-provider';\r\nimport { RavePayment } from './rave-payment-provider';\r\n\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class Rave {\r\n    uri: string;\r\n    constructor(public misc: Misc, public ravePayment: RavePayment, private http: HttpClient) {\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param production \r\n     * @param public_key \r\n     */\r\n    init(production=false, public_key) {\r\n        return new Promise((resolve, reject) => {\r\n            if(public_key == undefined) reject(\"Please pass in a valid public key\");\r\n            if (production) this.uri = this.misc.live;\r\n            else this.uri = this.misc.sandbox;\r\n            this.misc.PBFPubKey = public_key;\r\n            resolve(true)\r\n        })    \r\n    }\r\n\r\n    /**\r\n     * Returns a payment link that can be used to spin up the modal\r\n     * @param paymentObject \r\n     */\r\n    preRender(paymentObject:RavePayment) {\r\n        paymentObject[\"PBFPubKey\"] = this.misc.PBFPubKey;\r\n        var paymentObj = this.ravePayment.create(paymentObject)\r\n        return new Promise((resolve, reject) => {\r\n            if(paymentObj[\"validated\"]) { \r\n                return this.http.post(this.uri, paymentObj, {headers: {'content-type': 'application/json'}})\r\n                    .subscribe(response => {\r\n                        if(response[\"status\"] == \"error\") reject(response[\"message\"])\r\n                        else resolve(response[\"data\"][\"link\"])\r\n                    })\r\n            }else reject(paymentObj)\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Spins up the modal\r\n     * @param paymentLink \r\n     */\r\n    render(paymentLink) {\r\n        //@ts-ignore\r\n        window.open(paymentLink, '_blank');\r\n    }\r\n    \r\n}\r\n\r\n"]}